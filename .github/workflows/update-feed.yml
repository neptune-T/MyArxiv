name: Update

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    # 调整更新时间，默认每天运行一次。
    - cron: "12 5 * * *"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出仓库
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}  # 使用 GH_TOKEN 进行身份验证

      # Step 2: 下载并解压 ArxivFeed
      - name: Download ArxivFeed
        env:
          GITHUB_PAT: ${{ secrets.GH_TOKEN }}  # 使用 GitHub Token 进行身份验证
          REPO: "NotCraft/ArxivFeed"
          VERSION: "latest"
          MATCH: "arxivfeed-.+-x86_64-unknown-linux-musl.tar.gz$"
          RENAME: "arxivfeed.tgz"
        shell: bash
        run: |
          curl -sL --fail \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${GITHUB_PAT}" \
              "https://api.github.com/repos/${REPO}/releases/${VERSION}" \
              | jq -r ".assets | .[] | select(.name | test(\"${MATCH}\")) | .url" \
              | tee asset.url
          curl -sL --fail \
            -H "Accept: application/octet-stream" \
            -H "Authorization: Bearer ${GITHUB_PAT}" \
              -o "${RENAME}" \
              "$(cat asset.url)"
          tar -zxvf arxivfeed.tgz --strip-components 1 $(tar tf arxivfeed.tgz | grep /arxivfeed)
          chmod +x arxivfeed

      # Step 3: 运行 ArxivFeed 构建 RSS
      - name: Build rss
        run: ./arxivfeed

      # Step 4: 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}  # 使用 GH_TOKEN 进行身份验证
          publish_dir: ./target  # 设置要发布的目录
          force_orphan: true  # 强制使用孤立分支（避免影响已有分支）
